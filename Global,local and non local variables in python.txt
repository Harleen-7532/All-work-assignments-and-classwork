

MODULE - Global and local variables in python

Create global variable

x = "global"

def foo():
    print("x inside:", x)


foo()
print("x outside:", x)


Creating local variable

def foo():
    y = "local"
    print(y)

foo()

Using local and global variables in same code




x = "global "

def foo():
    global x
    y = "local"
    x = x * 2
    print(x)
    print(y)

foo()


Global and Local variable with same name
x = 5

def foo():
    x = 10
    print("local x:", x)


foo()
print("global x:", x)


Creating a non local variable
def outer():
    x = "local"

    def inner():
        nonlocal x
        x = "nonlocal"
        print("inner:", x)

    inner()
    print("outer:", x)


outer()

Using local and global variable

a = 1
  
# Uses global because there is no local 'a'
def f():
    print('Inside f() : ', a)
  
# Variable 'a' is redefined as a local
def g():
    a = 2
    print('Inside g() : ', a)
  
# Uses global keyword to modify global 'a'
def h():
    global a
    a = 3
    print('Inside h() : ', a)
  
  
# Global scope
print('global : ', a)
f()
print('global : ', a)
g()
print('global : ', a)
h()
print('global : ', a)


Global and local variable with the same name  

x = 5

def foo():
    x = 10
    print("local x:", x)


foo()
print("global x:", x)






