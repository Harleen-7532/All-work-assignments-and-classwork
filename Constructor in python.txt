Constructors in python

class Student:

    # constructor
    # initialize instance variable
    def __init__(self, name):
        print('Inside Constructor')
        self.name = name
        print('All variables initialized')

    # instance Method
    def show(self):
        print('Hello, my name is', self.name)


# create object using constructor
s1 = Student('Riya')
s1.show()

Types of constructors
Default 
Parametrized
Non-Parametrized

Default constructor 

class Employee:

    def display(self):
        print('Inside Display')

emp = Employee()
emp.display()

Non-Parametrized

class Company:

    # no-argument constructor
    def __init__(self):
        self.name = "PYnative"
        self.address = "ABC Street"

    # a method for printing data members
    def show(self):
        print('Name:', self.name, 'Address:', self.address)

# creating object of the class
cmp = Company()

# calling the instance method using the object
cmp.show()

Parametrized constructor

class Employee:
    # parameterized constructor
    def __init__(self, name, age, salary):
        self.name = name
        self.age = age
        self.salary = salary

    # display object
    def show(self):
        print(self.name, self.age, self.salary)

# creating object of the Employee class
emma = Employee('NAIRYA', 23, 7500)
emma.show()

kelly = Employee('Kelly', 25, 8500)
kelly.show()

Constructor with default keywords
class Student:
    # constructor with default values age and classroom
    def __init__(self, name, age=12, classroom=7):
        self.name = name
        self.age = age
        self.classroom = classroom

    # display Student
    def show(self):
        print(self.name, self.age, self.classroom)

# creating object of the Student class
emma = Student('NAIRYA')
emma.show()

kelly = Student('Kelly', 13)
kelly.show()